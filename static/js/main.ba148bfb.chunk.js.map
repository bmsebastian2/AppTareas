{"version":3,"sources":["components2/TodoForm.jsx","components2/Todo.jsx","components2/TodoList.jsx","App2.jsx","index.js"],"names":["TodoForm","todoAdd","todoEdit","todoEditChange","setTodoEdit","inictialFormValues","title","description","useState","formValues","setFormValues","error","setError","sucess","setSucess","useEffect","handleInpuChange","e","changeInputValues","target","name","value","getFocus","document","getElementById","focus","className","action","onSubmit","preventDefault","trim","reset","setTimeout","id","type","placeholder","defaultValue","onChange","cols","rows","onClick","Todo","todo","todoDelete","todoToogleCompleted","completed","TodoList","todos","length","map","initialTodos","localTodos","JSON","parse","localStorage","getItem","App2","setsTodos","setItem","stringify","changeTodos","filter","todoid","Date","now","todoChange","change","a","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba148bfb.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst TodoForm = ({todoAdd,todoEdit,todoEditChange,setTodoEdit}) => {\r\n    const inictialFormValues = {\r\n            title : '',\r\n            description : ''\r\n        };\r\n    const [formValues, setFormValues] = useState(inictialFormValues);\r\n    const {title, description} = formValues;\r\n    \r\n    const [error, setError] = useState(null);\r\n    const [sucess, setSucess] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        \r\n        if(todoEdit){\r\n            setFormValues(todoEdit)\r\n        }else{\r\n            setFormValues(inictialFormValues);\r\n        }\r\n\r\n    },[todoEdit]);\r\n\r\n   \r\n    \r\n\r\n    const handleInpuChange = (e) => {\r\n        const changeInputValues = {\r\n            ...formValues,[e.target.name]:e.target.value\r\n        }\r\n        setFormValues(changeInputValues);\r\n\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       \r\n        //Agregar nueva tarea\r\n        if(title.trim() ===''){\r\n            setError('Debe ingresar el titulo')\r\n            return\r\n        }\r\n        if(description.trim() ===''){\r\n            setError('Debe ingresar la description')\r\n            return\r\n        }\r\n\r\n        if(todoEdit){\r\n            todoEditChange(formValues);\r\n            setSucess('Tarea editada');\r\n            getFocus();\r\n        }else{\r\n            todoAdd(formValues);\r\n            setFormValues(inictialFormValues);\r\n            setSucess('Tarea agregada');\r\n            e.target.reset();\r\n            getFocus();\r\n           \r\n        }       \r\n       \r\n        setTimeout(()=>setSucess(null),1500);\r\n        setError(null);\r\n    }\r\n    const textAgregarTodo = () => {\r\n        setFormValues(inictialFormValues);\r\n        setTodoEdit(null);\r\n        document.getElementById('formulario').reset();\r\n\r\n        \r\n    }\r\n    const getFocus = ()=>{\r\n        document.getElementById('sisi').focus();\r\n    }\r\n    return (\r\n        <div>\r\n            <h2 className=\"display-5 text-center\">{(todoEdit)?'Editar Tarea':'Nueva Tarea'}</h2>\r\n            \r\n            <form action=\"\" onSubmit={handleSubmit} id=\"formulario\">\r\n\r\n                <input \r\n                    id=\"sisi\"\r\n                    name =\"title\"\r\n                    type=\"text\" \r\n                    placeholder=\"Titulo\"\r\n                    className=\"form-control\"\r\n                    defaultValue = {title}\r\n                    onChange = {handleInpuChange}\r\n                  \r\n\r\n                    />\r\n                <textarea \r\n                    className=\"form-control mt-2\"\r\n                    placeholder=\"Descripcion\"\r\n                    name=\"description\" \r\n                    id=\"\" \r\n                    cols=\"15\" \r\n                    rows=\"5\"\r\n                    defaultValue = {description}\r\n                    onChange = {handleInpuChange}\r\n                    >\r\n                    \r\n                </textarea>\r\n\r\n                <button \r\n                    className=\"btn btn-primary m-2 w-100\"\r\n                    type=\"submit\"\r\n                >\r\n                {(todoEdit)?'Editar tarea':'Agregar Tarea'}\r\n                \r\n                </button>\r\n                {(todoEdit) &&  \r\n                \r\n                    <p \r\n                        className=\" text-center\">Agregar <span type=\"button\" \r\n                        onClick={()=> textAgregarTodo()} className=\"text-primary\">\r\n                            Nueva Tarea\r\n                        </span>\r\n                   </p>\r\n                \r\n                }\r\n              \r\n        \r\n\r\n            </form>\r\n            {error && (<div className=\"alert alert-danger mt-2\"> {error}</div>)}\r\n            {sucess && (<div className=\"alert alert-success mt-2\">{sucess}</div>)}\r\n           \r\n            \r\n            \r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\n\r\nconst Todo = ({todo,todoDelete,todoToogleCompleted,setTodoEdit}) => {\r\n    return (\r\n        <div>\r\n          <div className=\"card mt-2\">\r\n\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title text-end\">\r\n                        {todo.title}\r\n                        <button \r\n                            className = {`btn btn-sm ${(todo.completed)?'btn-outline-success':'btn-success'} ms-5`}\r\n                            onClick = {() => todoToogleCompleted(todo.id)}\r\n                            >\r\n                                {(todo.completed)?'Terminar':'Terminado'}\r\n                            \r\n                        </button>\r\n                    </h3>\r\n                    <p className=\"card-text text-end\">\r\n                        {todo.description}\r\n                    </p>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button \r\n                            className=\"btn btn-sm btn-outline-primary me-2\"\r\n                            onClick= {() => setTodoEdit(todo)}\r\n                            >\r\n                            Editar\r\n                            </button>\r\n                        <button \r\n                            className=\"btn btn-sm btn-outline-danger\" \r\n                            onClick={()=>todoDelete(todo.id)}\r\n                            >\r\n                           Eliminar\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\n\r\n\r\nconst TodoList = ({todos,todoDelete,todoToogleCompleted,setTodoEdit}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n                <h2 className=\"text-end display-4\">Soy TodoList</h2>\r\n                {(todos.length<1) &&  <div className=\"alert alert-primary\">No hay tareas en la lista. Por favor agrega una {':-)'}</div>}\r\n                {\r\n                    todos.map( (todo) => <\r\n                        Todo todo = {todo} \r\n                        key = {todo.id}\r\n                        todoDelete={todoDelete}\r\n                        todoToogleCompleted={todoToogleCompleted}\r\n                        setTodoEdit={setTodoEdit}\r\n                        />) \r\n                }\r\n                \r\n                \r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React,{useState,useEffect} from 'react'\r\nimport TodoForm from './components2/TodoForm'\r\nimport TodoList from './components2/TodoList'\r\nconst initialTodos = [\r\n    {\r\n    id : 1,\r\n    title : 'Todo #1',\r\n    description : 'Desc de Todo #1',\r\n    completed : false\r\n\r\n},\r\n{\r\n    id : 2,\r\n    title : 'Todo #2',\r\n    description : 'Desc de Todo #2',\r\n    completed : true\r\n\r\n}]\r\nconst localTodos = JSON.parse(localStorage.getItem('todos'));\r\nconst App2 = () => {\r\n\r\n    const [todos, setsTodos] = useState(localTodos || initialTodos);\r\n    const [todoEdit, setTodoEdit] = useState(null);\r\n\r\n    useEffect (()=>{\r\n        localStorage.setItem('todos',JSON.stringify(todos));\r\n    },[todos])\r\n\r\n    const todoDelete = (id) => {\r\n        if(id){}else{\r\n            if(id === todoEdit.id){\r\n            setTodoEdit(null);\r\n        }\r\n        }\r\n        \r\n        const changeTodos = todos.filter(todo => todo.id !== id);\r\n        setsTodos(changeTodos);       \r\n    }\r\n    const todoToogleCompleted = (todoid) => {\r\n       const changeTodos = todos.map( (todo) => (todo.id === todoid)?{...todo,completed:!todo.completed}:todo);\r\n        setsTodos(changeTodos);\r\n    }\r\n    const todoAdd = (todo) => {\r\n        const newTodo ={\r\n            id : Date.now(),\r\n            ...todo,\r\n            completed : true\r\n        }\r\n        const changeTodos = [\r\n            newTodo, ...todos\r\n        ]\r\n        setsTodos(changeTodos);\r\n    }\r\n\r\n    const todoEditChange = (todoChange) =>{\r\n\r\n        const change = todos.map( (a) =>  a.id === todoChange.id?todoChange:a );\r\n        setsTodos(change);\r\n    }\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            \r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-md-8\">\r\n                   \r\n                   <TodoList \r\n                        todos={todos}\r\n                        todoDelete={todoDelete}\r\n                        todoToogleCompleted= {todoToogleCompleted}\r\n                        setTodoEdit = {setTodoEdit}\r\n                    />\r\n\r\n                </div>\r\n                \r\n                <div className=\"col-md-4\">\r\n                    \r\n                    <TodoForm\r\n                        todoEdit = {todoEdit}\r\n                        todoAdd = {todoAdd}\r\n                        todoEditChange = {todoEditChange}\r\n                        setTodoEdit = {setTodoEdit}\r\n                    />\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        \r\n            \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App2\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App2 from './App2';\nimport './index.css';\n// import App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <App2/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}